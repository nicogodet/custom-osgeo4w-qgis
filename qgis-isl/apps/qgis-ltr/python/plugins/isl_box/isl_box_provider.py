# -*- coding: utf-8 -*-

"""
/***************************************************************************
 ISLBox
                                 A QGIS plugin
 Boîte à outils pour tout ISLien
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-03-10
        copyright            : (C) 2021 by ISL
        email                : godet@isl.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = "ISL"
__date__ = "2021-03-10"
__copyright__ = "(C) 2021 by ISL"

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = "$Format:%H$"

import os

from qgis.core import QgsProcessingProvider
from qgis.PyQt.QtGui import QIcon

from processing.core.ProcessingConfig import ProcessingConfig, Setting

# TODO : Organiser les import
from .algorithm.CalculBV import CalculBV
from .algorithm.Courbe_HSV import CalculHSV
from .algorithm.exzeco import Exzeco
from .algorithm.MNSLmaxv2 import MnslmaxV2
from .algorithm.shp2tif import Shp2tif
from .algorithm.TAFromAtlas import TAFromAtlas
from .algorithm.txt2tif import Txt2tif

# Import ACB/AMC
from .algorithm.acb_amc.ACB_M1 import ACB_M1
from .algorithm.acb_amc.pre_traitement_sirene import PretraitementSirene


class ISLBoxProvider(QgsProcessingProvider):
    def __init__(self):
        QgsProcessingProvider.__init__(self)
        self.algs = []

    def id(self):
        return "islbox"

    def name(self):
        return "ISLBox"

    def icon(self):
        return QIcon(os.path.join(os.path.dirname(__file__), "icons", "ISL.png"))

    def longName(self):
        return self.name()

    def load(self):
        ProcessingConfig.settingIcons[self.name()] = self.icon()
        ProcessingConfig.addSetting(Setting(self.name(), "ISLBOX_ACTIVE", "Activé", True))

        ProcessingConfig.readSettings()
        self.refreshAlgorithms()
        return True

    def unload(self):
        ProcessingConfig.removeSetting("ISLBOX_ACTIVE")

    def isActive(self):
        return ProcessingConfig.getSetting("ISLBOX_ACTIVE")

    def setActive(self, active):
        ProcessingConfig.setSettingValue("ISLBOX_ACTIVE", active)

    def getAlgs(self):
        algs = [
            ACB_M1(),
            CalculBV(),
            CalculHSV(),
            Exzeco(),
            MnslmaxV2(),
            PretraitementSirene(),
            Shp2tif(),
            TAFromAtlas(),
            Txt2tif(),
        ]

        return algs

    def loadAlgorithms(self):
        self.algs = self.getAlgs()
        for a in self.algs:
            self.addAlgorithm(a)
